@using Ergasia1.Models.Posts
@model PostListViewModel

@{
    ViewData["Title"] = "All Posts";
}

<h1>All Posts</h1>

<form method="get" class="mb-3">
    <div class="row">
        <div class="col-md-4">
            <input type="text" name="searchString" class="form-control" placeholder="Search posts" value="@Model.SearchString" />
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary">Search</button>
            <button type="reset" class="btn btn-secondary ms-2" onclick="window.location.href='@Url.Action("List", "Post")'">Reset</button>
        </div>
        <div class="col-md-4 text-end">
            <a asp-controller = "Post" asp-action = "Create" class="btn btn-success mt-3">Create New Post</a>
        </div>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Tags</th>
            <th>Author</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var post in Model.Posts)
        {
            <tr>
                <td>@post.Title</td>
                <td>@post.Category</td>
                <td>@string.Join(", ", post.Tags.Select(t => t.Name))</td>
                <td>@post.User.FirstName @post.User.LastName</td>
                <td>@post.CreatedAt.ToString("g")</td>
                <td>
                    <a asp-controller="Post" asp-action="Details" asp-route-id="@post.Id" class="btn btn-info">View</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="d-flex justify-content-between">
    <div>
        Page @Model.CurrentPage of @Model.TotalPages
    </div>
    <div>
        <nav>
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", "Post", new { page = Model.CurrentPage - 1, searchString = Model.SearchString })">Previous</a>
                    </li>
                }
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @if (i == Model.CurrentPage) {
                    <text>active</text>
     }">
                        <a class="page-link" href="@Url.Action("List", "Post", new { page = i, searchString = Model.SearchString})">@i</a>
                    </li>
                }
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", "Post", new { page = Model.CurrentPage + 1, searchString = Model.SearchString})">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

